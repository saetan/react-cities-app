{"version":3,"sources":["imageData.js","Thumb.jsx","App.js","index.js"],"names":["imagesArr","img","city","Thumb","props","className","src","url","alt","App","useState","bigImage","setBigImage","renderImages","map","record","index","id","onClick","event","target","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oKA2CeA,G,KA3CG,CACd,CACIC,IACI,wIACJC,KAAM,UAEV,CACID,IACI,wIACJC,KAAM,aAEV,CACID,IACI,wIACJC,KAAM,UAEV,CACID,IACI,qIACJC,KAAM,SAEV,CACID,IACI,wIACJC,KAAM,UAEV,CACID,IACI,8GACJC,KAAM,SAEV,CACID,IACI,wIACJC,KAAM,UAEV,CACID,IACI,wIACJC,KAAM,W,OCrCC,SAASC,EAAMC,GAC1B,OACI,mCACI,qBAAKC,UAAU,QACXC,IAAKF,EAAMG,IACXC,IAAKJ,EAAMF,SCAZ,SAASO,IAEtB,MAAgCC,mBAAS,yIAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KASMC,EAAeb,EAAUc,KAAI,SAACC,EAAQC,GAC1C,IAAQd,EAAca,EAAdb,KAAMD,EAAQc,EAARd,IACd,OAAO,cAACE,EAAD,CAAOD,KAAMA,EAAMK,IAAKN,GAAUe,MAG3C,OACE,sBAAKX,UAAU,MAAf,UACE,qDACA,sBAAKY,GAAG,UAAR,UACE,qBAAKA,GAAG,aAAaC,QAAS,SAACC,GACE,UAA3BA,EAAMC,OAAOf,WACfO,EAAYO,EAAMC,OAAOd,MAF7B,SAMGO,IAIF,qBAAKP,IAAKK,EAAUM,GAAG,WAAWT,IAAI,mBChC/C,IAAMa,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAChB,EAAD,IAASY,I","file":"static/js/main.064cc887.chunk.js","sourcesContent":["const imagesArr = [\n    {\n        img:\n            'https://images.unsplash.com/photo-1505761671935-60b3a7427bad?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'london'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1534351590666-13e3e96b5017?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'amsterdam'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1524820197278-540916411e20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'sydney'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1547448526-5e9d57fa28f7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'tokyo'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1592409065737-a253f2900fa8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'dallas'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1502602898657-3e91760cbb34?ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60',\n        city: 'paris'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1505884065216-0661d68e5c47?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'athens'\n    },\n    {\n        img:\n            'https://images.unsplash.com/photo-1512453979798-5ea266f8880c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n        city: 'dubai'\n    }\n];\n\nexport default imagesArr;\n","import React from 'react'\n\nexport default function Thumb(props) {\n    return (\n        <>\n            <img className=\"thumb\"\n                src={props.url}\n                alt={props.city} />\n        </>\n    )\n}\n","// IMPORT useState\nimport React, { useState } from 'react';\nimport './styles.css';\nimport imagesArr from './imageData';\nimport Thumb from './Thumb';\n// IMPORT imageData.js AND STORE IT IN A VARIABLE CALLED imagesArr\n\nexport default function App() {\n  // USE useState TO CREATE  [bigImage, setBigImage] \n  const [bigImage, setBigImage] = useState('https://images.unsplash.com/photo-1505761671935-60b3a7427bad?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n  );\n  // AND SET IT TO THE IMAGE URL OF THE FIRST ELEMENT IN THE ARRAY\n\n  // CREATE A HANDLE CLICK FUNCTION THAT ACCEPTS AN IMAGE URL\n  // THE FUNCTION SHOULD CALL setBigImage AND PASS IT THE URL\n\n  // CREATE A VARIABLE CALLED images THAT LOOPs OVER THE imagesArr AND RETURNS AN <IMG> ELEMENT\n  // ASSIGN ALL OF THE PROPERTIES THAT IT NEEDS: src, alt, className, key INCLUDING AN onClick EVENT THAT CALLS THE HANDLE EVENT FUNCTION AND PASSES IT THE IMG URL\n  const renderImages = imagesArr.map((record, index) => {\n    const { city, img } = record\n    return <Thumb city={city} url={img} key={index} />\n  })\n\n  return (\n    <div className=\"App\">\n      <h1>Cities Of The World</h1>\n      <div id=\"wrapper\">\n        <div id=\"thumbnails\" onClick={(event) => {\n          if (event.target.className === 'thumb') {\n            setBigImage(event.target.src);\n          }\n        }}>\n          {/* RENDER THE IMAGES ARRAY  */}\n          {renderImages}\n        </div>\n        {/* THE SRC IMAGE URL SHOULD BE SET TO THE VALUE THAT IS STORED IN bigImage */}\n        {/* <img src=\"\" id=\"bigimage\" alt='bigImage'/> */}\n        {<img src={bigImage} id=\"bigimage\" alt=\"BigImage\" />}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}